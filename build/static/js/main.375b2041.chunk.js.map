{"version":3,"sources":["Menu/MenuView.js","User/UserRestaurantView.js","User/UserOrderView.js","Order/Cart.js","User/UserView.js","App.js","serviceWorker.js","index.js"],"names":["Menu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","react_default","a","createElement","Popover_default","className","anchorOrigin","vertical","horizontal","transformOrigin","open","index_es","onClick","closeMenu","Grid_default","container","direction","justify","alignItems","spacing","items","map","item","MenuView_MenuItem","key","id","addItemToCart","React","Component","MenuItem","_this3","Card_default","CardContent_default","CardMedia_default","component","image","name","price","CardActions_default","Button_default","passItemToAppCart","bind","UserRestaurantView","selectedRestaurant","displayMenu","activeMenu","setState","restaurants","arguments","k","push","getRestaurants","restaurant","UserRestaurantView_RestaurantSelection","openParentMenu","openMenu","Menu_MenuView","RestaurantSelection","description","UserOrderView","console","log","orders","order","restaurantId","getOrders","UserOrderView_PendingOrderSelection","getOrderRestaurant","getOrderItems","UserOrderView_FulfilledOrderSelection","FulfilledOrderSelection","crypto","createHash","update","toString","digest","substr","hashOrderId","total","PendingOrderSelection","_this4","createdAt","Cart","cartItems","quantity","removeItemFromCart","IconButton_default","close","getItems","Cart_CartItem","calculateTotal","checkout","styles","CartItem","UserView","err","error","user","handleError","restaurantViewOpen","RestaurantView","orderViewOpen","OrderView","src_User_UserOrderView","menus","closeOrderView","src_Order_Cart","cartOpen","closeCart","src_User_UserRestaurantView","closeRestaurantView","getActiveView","App","menu","getMenus","value","cart","index","fetch","then","res","json","forEach","catch","errorDetails","_this5","method","headers","Accept","Content-Type","body","createOrderPOSTBody","openOrderView","clearCart","JSON","stringify","App_MainMenu","openRestaurantView","openCart","noViewsOpen","src","alt","src_User_UserView","mutateParentState","mutateState","MainMenu","_this6","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.375b2041.chunk.js","sourcesContent":["import React from 'react';\nimport \"./MenuView.css\";\nimport Popover from '@material-ui/core/Popover';\nimport { Fastfood, Close } from '@material-ui/icons';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\n\nclass Menu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <Popover\n                className=\"ActiveMenuPopover\"\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                transformOrigin={{\n                   vertical: 'top',\n                   horizontal: 'left'\n                }}\n                open={this.props.open}\n            >\n                <Close className=\"CloseButton\" onClick={this.props.closeMenu}></Close>\n                <div className=\"MenuHeader\">\n                    <h1>Menu</h1>\n                </div>\n                <div className=\"ActiveMenu\">\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"flex\"\n                        alignItems=\"flex\"\n                        spacing={16}\n                    >\n                        {(this.props.items.map((item) => {\n                            return (\n                                <MenuItem\n                                    key={item.id}\n                                    item={item}\n                                    addItemToCart={this.props.addItemToCart}\n                                    closeMenu={this.props.closeMenu}\n                                ></MenuItem>\n                            )\n                        }))}\n                    </Grid>\n                </div>\n            </Popover>\n        )\n    }\n}\n\nclass MenuItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    passItemToAppCart() {\n        this.props.addItemToCart(this.props.item);\n        //this.props.closeMenu();\n    }\n\n    render() {\n        return (\n            <Card\n                className=\"MenuItemCard\"\n            >\n                <CardContent className=\"MenuItemCardContent\">\n                    <CardMedia\n                        className=\"MenuCardMedia\"\n                        component=\"img\"\n                        image={this.props.item.image}\n                    >\n                    </CardMedia>\n                    <br/>\n                    {this.props.item.name}\n                    <br />\n                    ${this.props.item.price}\n                    <CardActions>\n                        <Button\n                            onClick={this.passItemToAppCart.bind(this)}\n                        >Order</Button>\n                    </CardActions>\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nexport default Menu;","import React from 'react';\nimport './UserRestaurantView.css';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\n\n/** Other Views **/\nimport Menu from \"../Menu/MenuView\";\n\n/** Globals **/\n\nclass UserRestaurantView extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectedRestaurant: false,\n            displayMenu: false,\n            activeMenu: []\n        };\n    }\n\n    componentDidMount() {\n\n    }\n\n    openMenu() {\n        this.setState({\n            displayMenu: true,\n            activeMenu: this.props.restaurants[arguments[0]].items\n        });\n    }\n\n    closeMenu() {\n        this.setState({\n            displayMenu: false\n        });\n    }\n\n    getRestaurants() {\n        let restaurants = [];\n\n        for(var k in this.props.restaurants) {\n            restaurants.push(this.props.restaurants[k]);\n        }\n\n        return restaurants;\n    }\n\n    render() {\n        return (\n                <div\n                    className=\"UserRestaurantViewContainer\"\n                >\n                    <h1>Restaurants Near You</h1>\n                    <Grid\n                        className=\"UserRestaurantViewGrid\"\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        spacing={40}\n                    >\n                        {\n                            this.getRestaurants().map((restaurant) => {\n                                if(this.props.selectedRestaurant && restaurant.id !== this.props.selectedRestaurant) {\n                                     return null;\n                                } else {\n                                    return (\n                                        <RestaurantSelection\n                                            key={restaurant.id}\n                                            restaurant={restaurant}\n                                            openParentMenu={this.openMenu.bind(this, restaurant.id)}\n                                        ></RestaurantSelection>\n                                    );\n                                }\n                            })\n                        }\n                        <Menu\n                            open={this.state.displayMenu}\n                            items={this.state.activeMenu}\n                            closeMenu={this.closeMenu.bind(this)}\n                            addItemToCart={this.props.addItemToCart}\n                        ></Menu>\n                    </Grid>\n                </div>\n        );\n    }\n}\n\nclass RestaurantSelection extends React.Component {\n    constructor(props) {\n        super();\n\n        this.props = props;\n        this.state = {};\n    }\n\n    onClick() {\n        this.props.openParentMenu();\n    }\n\n    render() {\n        return (\n            <Card\n                className=\"RestaurantCard\"\n                onClick={this.onClick.bind(this)}\n            >\n                <CardContent className=\"RestaurantCardContent\">\n                    {this.props.restaurant.name}\n                    <br/>\n                    <CardMedia\n                        className=\"RestaurantCardMedia\"\n                        component=\"img\"\n                        image={this.props.restaurant.image}\n                    />\n                    <br/>\n                    {this.props.restaurant.description}\n                </CardContent>\n                <CardActions></CardActions>\n            </Card>\n        )\n    }\n}\n\nexport default UserRestaurantView;\n","import React from 'react';\nimport './UserOrderView.css';\nimport crypto from \"crypto\";\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\n//import CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\n//import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\n\n/** Other Views **/\n\nclass UserOrderView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        console.log(\"orders:\");\n        console.log(props.orders);\n    }\n\n    componentDidMount() {\n\n    }\n\n    getOrderRestaurant(order) {\n        if(this.props.restaurants[order.restaurantId]) {\n            return this.props.restaurants[order.restaurantId]\n        } else {\n            return {};\n        }\n    }\n\n    getOrderItems(order) {\n//        let restaurant = this.getOrderRestaurant(order);\n        return [];\n    }\n\n    getOrders() {\n        let orders = [];\n\n        for(var k in this.props.orders) {\n            orders.push(this.props.orders[k]);\n        }\n\n        return orders;\n    }\n\n    render() {\n        return (\n            <div\n                className=\"UserOrderViewContainer\"\n            >\n                <h1>Your Orders</h1>\n                <Grid\n                    className=\"UserOrderViewGrid\"\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    spacing={40}\n                >\n                    {\n                        this.getOrders().map((order) => {\n                            if (order.state === \"pending\") {\n                                return (\n                                    <PendingOrderSelection\n                                        key={order.id}\n                                        order={order}\n                                        restaurant={this.getOrderRestaurant(order)}\n                                        items={this.getOrderItems(order)}\n                                    ></PendingOrderSelection>\n                                );\n                            } else {\n                                return (\n                                    <FulfilledOrderSelection\n                                        key={order.id}\n                                        order={order}\n                                        restaurant={this.getOrderRestaurant(order)}\n                                        items={this.getOrderItems(order)}\n                                    ></FulfilledOrderSelection>\n                                );\n                            }\n                        })\n                    }\n                </Grid>\n            </div>\n        );\n    }\n}\n\nclass FulfilledOrderSelection extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    openItemSummary(order) {\n\n    }\n\n    hashOrderId(id) {\n        return crypto.createHash('md5').update(id.toString()).digest('hex').substr(0, 8);\n    }\n\n    render() {\n        console.log(this.props);\n        return (\n            <Card\n                className=\"FulfilledOrderCard\"\n            >\n                <CardContent className=\"OrderCardContent\">\n                    Order {this.hashOrderId(this.props.order.id)}\n                    <br/>\n                    <CardMedia\n                        className=\"OrderCardMedia\"\n                        component=\"img\"\n                    />\n                    <br/>\n                    From {this.props.restaurant.name}\n                    {this.props.order.total}<br />\n                    {this.props.order.state}\n                </CardContent>\n                <CardActions></CardActions>\n            </Card>\n        )\n    }\n}\n\nclass PendingOrderSelection extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    openItemSummary(order) {\n\n    }\n\n    hashOrderId(id) {\n        return crypto.createHash('md5').update(id.toString()).digest('hex').substr(0, 8);\n    }\n\n    render() {\n        console.log(this.props);\n        return (\n            <Card\n                className=\"PendingOrderCard\"\n            >\n                <CardContent className=\"OrderCardContent\">\n                    Order {this.hashOrderId(this.props.order.id)}\n                    <br/>\n                    <CardMedia\n                        className=\"OrderCardMedia\"\n                        component=\"img\"\n                    />\n                    <br/>\n                    {this.props.restaurant.name}\n                    <br />\n                    {this.props.order.createdAt}\n                    {this.props.order.total}<br />\n                    {this.props.order.state}\n                </CardContent>\n                <CardActions></CardActions>\n            </Card>\n        )\n    }\n}\n\nexport default UserOrderView;\n","import React from 'react';\nimport \"./Cart.css\";\nimport Popover from '@material-ui/core/Popover';\nimport { Close } from '@material-ui/icons';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\n//import CardActionArea from '@material-ui/core/CardActionArea';\n//import CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\n\nclass Cart extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    calculateTotal() {\n        let total = 0;\n\n        for(var k in this.props.cartItems) {\n            total += this.props.cartItems[k].price*this.props.cartItems[k].quantity;\n        }\n\n        return total;\n    }\n\n    removeItem(id) {\n        this.props.removeItemFromCart(id);\n    }\n\n    getItems() {\n        let items = [];\n\n        for(var k in this.props.cartItems) {\n            items.push(this.props.cartItems[k]);\n        }\n\n        return items;\n    }\n\n    render() {\n        return (\n            <Popover\n                className=\"Cart\"\n                open={this.props.open}\n            >\n                <IconButton\n                    onClick={this.props.close}\n                >\n                    <Close />\n                </IconButton>\n                <div className=\"CartContent\">\n                    <Grid\n                        className=\"CartGrid\"\n                        container\n                        direction=\"column\"\n                        justify=\"left\"\n                        alignItems=\"left\"\n                        spacing={16}\n                    >\n                        {\n                            this.getItems().map((item) => {\n                                return (<CartItem key={item.id} item={item}></CartItem>);\n                            })\n                        }\n                        <br />\n                    </Grid>\n                    <div className=\"CartTotal\">\n                        <b>Total:</b> ${this.calculateTotal()}\n                        <br />\n                        <Button\n                            className=\"CheckoutButton\"\n                            onClick={this.props.checkout}\n                            styles={{}}\n                        >\n                            Checkout\n                        </Button>\n                    </div>\n                </div>\n            </Popover>\n        );\n    }\n}\n\nclass CartItem extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Card\n                className=\"CartItem\"\n            >\n                <CardContent>\n                    <CardMedia\n                        className=\"CartItemCardMedia\"\n                        component=\"img\"\n                        image={this.props.item.image}\n                    ></CardMedia>\n                    {this.props.item.quantity} {this.props.item.name}<br />\n                    ${this.props.item.price * this.props.item.quantity}\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nexport default Cart;","import React from 'react';\nimport './UserView.css';\nimport UserRestaurantView from \"./UserRestaurantView\";\nimport UserOrderView from \"./UserOrderView\";\nimport Cart from \"../Order/Cart\";\n\nclass UserView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleError(err) {\n        this.setState({\n            error: true\n        });\n    }\n\n    processUser(user) {\n        if(!user.error) {\n            this.setState({\n                user: user\n            });\n        } else {\n            this.handleError(user.error);\n        }\n    }\n\n    getActiveView() {\n        if(this.props.restaurantViewOpen) {\n            return this.RestaurantView()\n        } else if(this.props.orderViewOpen) {\n            return this.OrderView()\n        } else {\n            return null;\n        }\n    }\n\n    OrderView() {\n        return (\n            <div>\n                <UserOrderView\n                    user={this.state.user}\n                    orders={this.props.orders}\n                    restaurants={this.props.restaurants}\n                    menus={this.props.menus}\n                    open={this.props.orderViewOpen}\n                    close={this.props.closeOrderView}\n                />\n                <Cart\n                    open={this.state.cartOpen}\n                    close={this.closeCart}\n                    cartItems={this.props.cartItems}\n                    removeItemFromCart={this.removeItemFromCart}\n                ></Cart>\n            </div>\n        );\n    }\n\n    RestaurantView() {\n        return (\n            <div>\n                <UserRestaurantView\n                    user={this.state.user}\n                    open={this.props.restaurantViewOpen}\n                    close={this.props.closeRestaurantView}\n                    restaurants={this.props.restaurants}\n                    selectedRestaurant={this.props.selectedRestaurant}\n                    menus={this.props.menus}\n                    addItemToCart={this.props.addItemToCart}\n                    closeCart={this.props.closeCart}\n                />\n                <Cart\n                    open={this.props.cartOpen}\n                    close={this.props.closeCart}\n                    cartItems={this.props.cartItems}\n                    removeItemFromCart={this.removeItemFromCart}\n                    checkout={this.props.checkout}\n                ></Cart>\n            </div>\n        );\n    }\n\n    render() {\n        return this.getActiveView();\n    }\n}\n\nexport default UserView;\n","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Fastfood, Restaurant, ShoppingCart } from '@material-ui/icons';\n\n/** Child Views **/\nimport UserView from \"./User/UserView\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      restaurantViewOpen: false,\n      orderViewOpen: false,\n      cartItems: {},\n      restaurants: {},\n      selectedRestaurant: false,\n      menu: {},\n      orders: {}\n    };\n  }\n\n  componentWillMount() {\n    this.getRestaurants();\n    this.getMenus();\n    this.getOrders();\n  }\n\n  mutateState(key, value) {\n    let update = {};\n    update[key] = value;\n    this.setState(update);\n  }\n\n  openCart() {\n    this.setState({\n      cartOpen: true\n    })\n  };\n\n  closeCart() {\n    this.setState({\n      cartOpen: false\n    })\n  }\n\n  openRestaurantView() {\n    this.closeOrderView();\n\n    this.setState({\n      restaurantViewOpen: true\n    });\n  }\n\n  closeRestaurantView() {\n    this.setState({\n      restaurantViewOpen: false\n    });\n  }\n\n  openOrderView() {\n    this.closeRestaurantView();\n\n    this.setState({\n      orderViewOpen: true\n    });\n  }\n\n  closeOrderView() {\n    this.setState({\n      orderViewOpen: false\n    });\n  }\n\n  noViewsOpen() {\n    return !this.state.restaurantViewOpen && !this.state.orderViewOpen;\n  }\n\n  addItemToCart(item) {\n    if(!this.state.selectedRestaurant) {\n      this.setState({\n        selectedRestaurant: item.restaurantId\n      });\n    } else {\n      if(item.restaurantId !== this.state.selectedRestaurant) {\n        return false;\n      }\n    }\n\n    let cart = this.state.cartItems;\n\n    if(cart[item.id]) {\n      cart[item.id].quantity++;\n    } else {\n      cart[item.id] = item;\n      cart[item.id].quantity = 1;\n    }\n\n    this.setState({\n      cart: cart\n    });\n  }\n\n  removeItemFromCart(index) {\n    let cart = this.state.cartItems;\n    delete cart[index];\n    this.setState({\n      cart: cart\n    });\n  }\n\n  clearCart() {\n    this.setState({\n      cartItems: {}\n    });\n  }\n\n  getRestaurants() {\n    fetch(\"https://cs441-api.herokuapp.com/restaurants\").then(res => {\n      return res.json();\n    }).then(json => {\n      let restaurants = {};\n      json.forEach(restaurant => {\n        restaurants[restaurant.id] = restaurant;\n      });\n\n\n      this.setState({\n        restaurants: restaurants\n      });\n      console.log(\"Fetched restaurants from API.\");\n    }).catch(err => {\n      this.setState({\n        error: true,\n        errorDetails: err\n      });\n    });\n  }\n\n  getMenus() {\n    fetch(\"https://cs441-api.herokuapp.com/menus\").then(res => {\n      return res.json();\n    }).then(json => {\n      let menus = {};\n      json.forEach(menu => {\n        menus[menu.id] = menu;\n      });\n\n\n      this.setState({\n        menus: menus\n      });\n\n      console.log(\"Fetched menus from API.\");\n    }).catch(err => {\n      this.setState({\n        error: true,\n        errorDetails: err\n      });\n    });\n  }\n\n  getOrders() {\n    fetch(\"https://cs441-api.herokuapp.com/orders\").then(res => {\n      return res.json();\n    }).then(json => {\n      let orders = {};\n\n      json.forEach(order => {\n        orders[order.id] = order;\n      });\n\n      this.setState({\n        orders: orders\n      });\n\n      console.log(\"Fetched orders from API.\");\n    }).catch(err => {\n      this.setState({\n        error: true,\n        errorDetails: err\n      });\n    });\n  }\n\n  checkout() {\n    this.setState({\n      selectedRestaurant: false\n    });\n\n    this.closeCart();\n\n    fetch('https://cs441-api.herokuapp.com/orders', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: this.createOrderPOSTBody()\n    }).then((res) => {\n      console.log(this.state.cartItems);\n      this.getOrders();\n      this.openOrderView();\n      this.clearCart();\n    });\n  }\n\n  createOrderPOSTBody() {\n    return JSON.stringify({\n      restaurantId: this.state.selectedRestaurant,\n      items: this.state.cartItems\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <MainMenu\n              openRestaurantView={this.openRestaurantView.bind(this)}\n              openOrderView={this.openOrderView.bind(this)}\n              openCart={this.openCart.bind(this)}\n          />\n          <Grid container className=\"AppGrid\">\n            <br />\n            {\n              this.noViewsOpen() ?\n                (\n                  <div className=\"LogoContainer\">\n                    <img className=\"LandingLogo\" src=\"/foodapp_logo_v3.png\" alt=\"Foodapp Logo\" />\n                    <h4>All images courtesy of Wikimedia</h4>\n                  </div>\n                )\n                : \"\"\n            }\n            <UserView\n                restaurants={this.state.restaurants}\n                selectedRestaurant={this.state.selectedRestaurant}\n                menus={this.state.menus}\n                orders={this.state.orders}\n                cartItems={this.state.cartItems}\n                mutateParentState={this.mutateState.bind(this)}\n                restaurantViewOpen={this.state.restaurantViewOpen}\n                orderViewOpen={this.state.orderViewOpen}\n                addItemToCart={this.addItemToCart.bind(this)}\n                closeCart={this.closeCart.bind(this)}\n                removeItemFromCart={this.removeItemFromCart.bind(this)}\n                cartOpen={this.state.cartOpen}\n                checkout={this.checkout.bind(this)}\n            />\n          </Grid>\n      </div>\n    );\n  }\n}\n\nclass MainMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n        <nav className=\"AppNav\">\n          <IconButton\n              onClick={this.props.openRestaurantView.bind(this)}\n          >\n            <Restaurant />\n          </IconButton>\n          <IconButton\n              onClick={this.props.openOrderView.bind(this)}\n          >\n            <Fastfood />\n          </IconButton>\n          <IconButton\n              onClick={this.props.openCart.bind(this)}\n          >\n            <ShoppingCart />\n          </IconButton>\n        </nav>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}