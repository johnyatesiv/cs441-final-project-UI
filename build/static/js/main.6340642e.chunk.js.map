{"version":3,"sources":["Menu/MenuView.js","User/UserRestaurantView.js","User/UserOrderView.js","Order/Cart.js","User/UserView.js","App.js","serviceWorker.js","index.js"],"names":["Menu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","react_default","a","createElement","Popover_default","className","anchorOrigin","vertical","horizontal","transformOrigin","open","index_es","onClick","closeMenu","Grid_default","direction","justify","alignItems","spacing","items","map","item","MenuView_MenuItem","key","id","addItemToCart","React","Component","MenuItem","_this3","Card_default","CardContent_default","CardMedia_default","component","image","name","price","CardActions_default","Button_default","passItemToAppCart","bind","UserRestaurantView","selectedRestaurant","displayMenu","activeMenu","userLat","userLng","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","restaurants","arguments","k","push","openMenuExplicit","UserRestaurantView_RestaurantMap","getRestaurants","openParentMenu","openMenu","selectRestaurant","container","restaurant","UserRestaurantView_RestaurantSelection","Menu_MenuView","RestaurantMap","lib","lat","lng","markers","forEach","createMarker","_this4","MapComponent","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","addMarkers","googleMapURL","loadingElement","style","height","containerElement","mapElement","RestaurantSelection","_this5","description","UserOrderView","console","log","orders","order","restaurantId","reverse","getOrders","UserOrderView_PendingOrderSelection","getOrderRestaurant","getOrderItems","UserOrderView_FulfilledOrderSelection","OrderSelection","crypto","createHash","update","toString","digest","substr","orderItems","styles","width","src","alt","total","toLocaleString","currency","calculateTotal","Date","createdAt","count","length","status","FulfilledOrderSelection","fontSize","itemCountDisplay","PendingOrderSelection","orderItemsDisplay","date","Cart","cartItems","quantity","removeItemFromCart","IconButton_default","close","getItems","Cart_CartItem","checkout","CartItem","UserView","err","error","user","handleError","restaurantViewOpen","RestaurantView","orderViewOpen","OrderView","src_User_UserOrderView","menus","closeOrderView","src_Order_Cart","cartOpen","closeCart","src_User_UserRestaurantView","closeRestaurantView","getActiveView","App","menu","getMenus","value","cart","index","fetch","then","res","json","catch","errorDetails","method","headers","Accept","Content-Type","body","createOrderPOSTBody","openOrderView","clearCart","JSON","stringify","App_MainMenu","openRestaurantView","openCart","noViewsOpen","src_User_UserView","mutateParentState","mutateState","MainMenu","_this6","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6340642e.chunk.js","sourcesContent":["import React from 'react';\nimport \"./MenuView.css\";\nimport Popover from '@material-ui/core/Popover';\nimport { Close } from '@material-ui/icons';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\n\nclass Menu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <Popover\n                className=\"ActiveMenuPopover\"\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                transformOrigin={{\n                   vertical: 'top',\n                   horizontal: 'left'\n                }}\n                open={this.props.open}\n            >\n                <Close className=\"CloseButton\" onClick={this.props.closeMenu}></Close>\n                <div className=\"MenuHeader\">\n                    <h1>Menu</h1>\n                </div>\n                <div className=\"ActiveMenu\">\n                    <Grid\n                        direction=\"row\"\n                        justify=\"flex\"\n                        alignItems=\"flex\"\n                        spacing={16}\n                    >\n                        {(this.props.items.map((item) => {\n                            return (\n                                <MenuItem\n                                    key={item.id}\n                                    item={item}\n                                    addItemToCart={this.props.addItemToCart}\n                                    closeMenu={this.props.closeMenu}\n                                ></MenuItem>\n                            )\n                        }))}\n                    </Grid>\n                </div>\n            </Popover>\n        )\n    }\n}\n\nclass MenuItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    passItemToAppCart() {\n        this.props.addItemToCart(this.props.item);\n        //this.props.closeMenu();\n    }\n\n    render() {\n        return (\n            <Card\n                className=\"MenuItemCard\"\n            >\n                <CardContent className=\"MenuItemCardContent\">\n                    <CardMedia\n                        className=\"MenuCardMedia\"\n                        component=\"img\"\n                        image={this.props.item.image}\n                    >\n                    </CardMedia>\n                    <br/>\n                    {this.props.item.name} ${this.props.item.price}\n                    <CardActions>\n                        <Button\n                            className=\"MenuBuyButton\"\n                            onClick={this.passItemToAppCart.bind(this)}\n                        >Order</Button>\n                    </CardActions>\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nexport default Menu;","import React from 'react';\nimport './UserRestaurantView.css';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\"\n\n/** Other Views **/\nimport Menu from \"../Menu/MenuView\";\n\n/** Globals **/\n\nclass UserRestaurantView extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectedRestaurant: false,\n            displayMenu: false,\n            activeMenu: [],\n            userLat: 32.979806,\n            userLng: -117.0780109\n        };\n    }\n\n    componentWillReceiveProps() {\n        if (\"geolocation\" in navigator) {\n            navigator.geolocation.getCurrentPosition(function(position) {\n                this.setState({\n                    userLat: position.coords.latitude,\n                    userLng: position.coords.longitude\n                });\n            });\n        } else {\n            /* geolocation IS NOT available */\n        }\n    }\n\n    componentDidMount() {\n\n    }\n\n    openMenu() {\n        this.setState({\n            displayMenu: true,\n            activeMenu: this.props.restaurants[arguments[0] - 1].items\n        });\n    }\n\n    openMenuExplicit(id) {\n        this.setState({\n            displayMenu: true,\n            activeMenu: this.props.restaurants[id].items\n        });\n    }\n\n    closeMenu() {\n        this.setState({\n            displayMenu: false\n        });\n    }\n\n    getRestaurants() {\n        let restaurants = [];\n\n        for(var k in this.props.restaurants) {\n            restaurants.push(this.props.restaurants[k]);\n        }\n\n        return restaurants;\n    }\n\n    selectRestaurant() {\n        this.openMenuExplicit(arguments[0] - 1);\n    }\n\n    render() {\n        return (\n                <div\n                    className=\"UserRestaurantViewContainer\"\n                >\n                    <h1>Restaurants Near You</h1>\n                    <RestaurantMap\n                        restaurants={this.getRestaurants()}\n                        openParentMenu={this.openMenu}\n                        userLat={this.state.userLat}\n                        userLng={this.state.userLng}\n                        selectRestaurant={this.selectRestaurant}\n                    />\n                    <Grid\n                        className=\"UserRestaurantViewGrid\"\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        spacing={40}\n                    >\n                        {\n                            this.getRestaurants().map((restaurant) => {\n                                if(this.props.selectedRestaurant && restaurant.id !== this.props.selectedRestaurant) {\n                                     return null;\n                                } else {\n                                    return (\n                                        <RestaurantSelection\n                                            key={restaurant.id}\n                                            restaurant={restaurant}\n                                            openParentMenu={this.openMenu.bind(this, restaurant.id+1)}\n                                        ></RestaurantSelection>\n                                    );\n                                }\n                            })\n                        }\n                        <Menu\n                            open={this.state.displayMenu}\n                            items={this.state.activeMenu}\n                            closeMenu={this.closeMenu.bind(this)}\n                            addItemToCart={this.props.addItemToCart}\n                        ></Menu>\n                    </Grid>\n                </div>\n        );\n    }\n}\n\nclass RestaurantMap extends React.Component {\n    createMarker(restaurant) {\n        return (\n            <Marker\n                key={restaurant.id}\n                position={{ lat: restaurant.lat, lng: restaurant.lng }}\n                onClick={this.props.selectRestaurant.bind(this, restaurant.id)}\n            />\n        );\n    }\n\n    addMarkers() {\n        let markers = [];\n\n        this.props.restaurants.forEach((restaurant) => {\n            markers.push(this.createMarker(restaurant));\n        });\n\n        return markers;\n    }\n\n    render() {\n       const MapComponent = withScriptjs(withGoogleMap((props) =>\n            <GoogleMap\n                defaultZoom={13}\n                defaultCenter={{ lat: this.props.userLat, lng: this.props.userLng }}\n            >\n                {this.addMarkers()}\n             </GoogleMap>\n        ));\n\n        return (\n            <MapComponent\n                className=\"RestaurantMap\"\n                googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyD44S3kM5pY8Tae-uz5c6YCd-F7gABvSi0\"\n                loadingElement={<div style={{ height: `100%` }} />}\n                containerElement={<div style={{ height: `400px` }} />}\n                mapElement={<div style={{ height: `100%` }} />}\n            />\n        )\n    }\n\n}\n\nclass RestaurantSelection extends React.Component {\n    constructor(props) {\n        super();\n\n        this.props = props;\n        this.state = {};\n    }\n\n    onClick() {\n        this.props.openParentMenu();\n    }\n\n    render() {\n        return (\n            <Card\n                className=\"RestaurantCard\"\n                onClick={this.onClick.bind(this)}\n            >\n                <CardContent className=\"RestaurantCardContent\">\n                    {this.props.restaurant.name}\n                    <br/>\n                    <br/>\n                    <CardMedia\n                        className=\"RestaurantCardMedia\"\n                        component=\"img\"\n                        image={this.props.restaurant.image}\n                    />\n                    <br/>\n                    {this.props.restaurant.description}\n                </CardContent>\n            </Card>\n        )\n    }\n}\n\nexport default UserRestaurantView;\n","import React from 'react';\nimport './UserOrderView.css';\nimport crypto from \"crypto\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\n//import CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\n//import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport { Cached, CheckCircleOutline } from '@material-ui/icons';\n\n/** Other Views **/\n\nclass UserOrderView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        console.log(\"orders:\");\n        console.log(props.orders);\n    }\n\n    componentDidMount() {\n\n    }\n\n    getOrderRestaurant(order) {\n        if(this.props.restaurants[order.restaurantId]) {\n            return this.props.restaurants[order.restaurantId]\n        } else {\n            return {};\n        }\n    }\n\n    getOrderItems(order) {\n//        let restaurant = this.getOrderRestaurant(order);\n        return [];\n    }\n\n    getOrders() {\n        let orders = [];\n\n        for(var k in this.props.orders) {\n            orders.push(this.props.orders[k]);\n        }\n\n        orders.reverse();\n        return orders;\n    }\n\n    render() {\n        return (\n            <div\n                className=\"UserOrderViewContainer\"\n            >\n                <h1>Your Orders</h1>\n                <Grid\n                    className=\"UserOrderViewGrid\"\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    spacing={40}\n                >\n                    {\n                        this.getOrders().map((order) => {\n                            if (order.state === \"pending\") {\n                                return (\n                                    <PendingOrderSelection\n                                        key={order.id}\n                                        order={order}\n                                        restaurant={this.getOrderRestaurant(order)}\n                                        items={this.getOrderItems(order)}\n                                    ></PendingOrderSelection>\n                                );\n                            } else {\n                                return (\n                                    <FulfilledOrderSelection\n                                        key={order.id}\n                                        order={order}\n                                        restaurant={this.getOrderRestaurant(order)}\n                                        items={this.getOrderItems(order)}\n                                    ></FulfilledOrderSelection>\n                                );\n                            }\n                        })\n                    }\n                </Grid>\n            </div>\n        );\n    }\n}\n\nclass OrderSelection extends React.Component {\n    openItemSummary(order) {\n\n    }\n\n    /**\n     * hashOrderId\n     * @param id\n     * @returns {string}\n     */\n    hashOrderId(id) {\n        return crypto.createHash('md5').update(id.toString()).digest('hex').substr(0, 8);\n    }\n\n    /**\n     * orderItemsDisplay\n     * @param orderItems\n     * @returns {XML}\n     */\n    orderItemsDisplay(orderItems) {\n        console.log(\"items:\");\n        console.log(orderItems);\n        return (\n            <Grid>\n                {\n                    orderItems.forEach((item) => {\n                        if(item.item) {\n                            return (\n                                <Card styles={{width: \"10%\"}}>\n                                    <CardMedia>\n                                        <img src={item.item.image} alt={item.item.name}/>\n                                    </CardMedia>\n                                    <CardContent>\n                                        {item.item.name}\n                                    </CardContent>\n                                </Card>\n                            )\n                        }\n                    })\n                }\n            </Grid>\n        )\n    }\n\n    /**\n     * calculateTotal\n     * @returns {string|*}\n     */\n    calculateTotal() {\n        let total = 0;\n\n        this.props.order.orderItems.forEach((item) => {\n            if(item.item) {\n                total += item.item.price;\n            }\n        });\n\n        return total.toLocaleString(\"en-US\", {style: \"currency\", currency: \"USD\"});\n    }\n\n    /**\n     * total\n     * @returns {XML}\n     */\n    total() {\n        return (\n            <span>{this.calculateTotal()}</span>\n        );\n    }\n\n    /**\n     * date\n     * @returns {XML}\n     */\n    date() {\n        return (<span>{new Date(this.props.order.createdAt).toLocaleString()}</span>);\n    }\n\n    /**\n     * itemCountDisplay\n     * @returns {*}\n     */\n    itemCountDisplay() {\n        if(this.props.order.orderItems) {\n            let count = this.props.order.orderItems.length;\n            if(count > 1) {\n                return count+\" Items\";\n            } else {\n                return count+\" Item\";\n            }\n        } else {\n            return '';\n        }\n    }\n\n    /**\n     * status\n     * @returns {XML}\n     */\n    status() {\n        return (\n            <Button className=\"StatusButton\">\n                {this.props.order.status}\n            </Button>\n        );\n    }\n}\n\nclass FulfilledOrderSelection extends OrderSelection {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        console.log(this.props);\n        return (\n            <Card\n                className=\"FulfilledOrderCard\"\n            >\n                <CardContent className=\"OrderCardContent\">\n                    <CheckCircleOutline fontSize=\"large\" className=\"LeftIcon\" />\n                    <br/>\n                    <span className=\"OrderCardHeader\">\n                        {this.total()}\n                        <br/>\n                        from {this.props.restaurant.name}\n                        <br/>\n                        {this.itemCountDisplay()}\n                    </span>\n                </CardContent>\n                <CardActions></CardActions>\n            </Card>\n        )\n    }\n}\n\nclass PendingOrderSelection extends OrderSelection {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <Card\n                className=\"PendingOrderCard\"\n            >\n                <CardContent className=\"OrderCardContent\">\n                    <Cached fontSize=\"large\" className=\"LeftIcon\" />\n                    <br/>\n                    <span className=\"OrderCardHeader\">\n                        {this.total()}\n                        <br/>\n                        from {this.props.restaurant.name}\n                    </span>\n                    <br />\n                    {this.orderItemsDisplay(this.props.order.orderItems)}\n                    <span className=\"OrderCardData\">\n                        at {this.date()}\n                    </span>\n                </CardContent>\n                <CardActions></CardActions>\n            </Card>\n        )\n    }\n}\n\nexport default UserOrderView;\n","import React from 'react';\nimport \"./Cart.css\";\nimport Popover from '@material-ui/core/Popover';\nimport { Close } from '@material-ui/icons';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\n//import CardActionArea from '@material-ui/core/CardActionArea';\n//import CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\n\nclass Cart extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    calculateTotal() {\n        let total = 0;\n\n        for(var k in this.props.cartItems) {\n            total += this.props.cartItems[k].price*this.props.cartItems[k].quantity;\n        }\n\n        return total;\n    }\n\n    removeItem(id) {\n        this.props.removeItemFromCart(id);\n    }\n\n    getItems() {\n        let items = [];\n\n        for(var k in this.props.cartItems) {\n            items.push(this.props.cartItems[k]);\n        }\n\n        return items;\n    }\n\n    render() {\n        return (\n            <Popover\n                className=\"Cart\"\n                open={this.props.open}\n            >\n                <IconButton\n                    onClick={this.props.close}\n                >\n                    <Close />\n                </IconButton>\n                <div className=\"CartContent\">\n                    <Grid\n                        className=\"CartGrid\"\n                        container\n                        direction=\"column\"\n                        justify=\"left\"\n                        alignItems=\"left\"\n                        spacing={16}\n                    >\n                        {\n                            this.getItems().map((item) => {\n                                return (<CartItem key={item.id} item={item}></CartItem>);\n                            })\n                        }\n                        <br />\n                    </Grid>\n                    <div className=\"CartActions\">\n                        <b>Total:</b> ${this.calculateTotal()}\n                        <br />\n                        <Button\n                            className=\"CheckoutButton\"\n                            onClick={this.props.checkout}\n                            styles={{}}\n                        >\n                            Checkout\n                        </Button>\n                    </div>\n                </div>\n            </Popover>\n        );\n    }\n}\n\nclass CartItem extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Card\n                className=\"CartItem\"\n            >\n                <CardContent>\n                    <CardMedia\n                        className=\"CartItemCardMedia\"\n                        component=\"img\"\n                        image={this.props.item.image}\n                    ></CardMedia>\n                    {this.props.item.quantity} {this.props.item.name}<br />\n                    ${this.props.item.price * this.props.item.quantity}\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nexport default Cart;","import React from 'react';\nimport './UserView.css';\nimport UserRestaurantView from \"./UserRestaurantView\";\nimport UserOrderView from \"./UserOrderView\";\nimport Cart from \"../Order/Cart\";\n\nclass UserView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleError(err) {\n        this.setState({\n            error: true\n        });\n    }\n\n    processUser(user) {\n        if(!user.error) {\n            this.setState({\n                user: user\n            });\n        } else {\n            this.handleError(user.error);\n        }\n    }\n\n    getActiveView() {\n        if(this.props.restaurantViewOpen) {\n            return this.RestaurantView()\n        } else if(this.props.orderViewOpen) {\n            return this.OrderView()\n        } else {\n            return null;\n        }\n    }\n\n    OrderView() {\n        return (\n            <div>\n                <UserOrderView\n                    user={this.state.user}\n                    orders={this.props.orders}\n                    restaurants={this.props.restaurants}\n                    menus={this.props.menus}\n                    open={this.props.orderViewOpen}\n                    close={this.props.closeOrderView}\n                />\n                <Cart\n                    open={this.state.cartOpen}\n                    close={this.closeCart}\n                    cartItems={this.props.cartItems}\n                    removeItemFromCart={this.removeItemFromCart}\n                ></Cart>\n            </div>\n        );\n    }\n\n    RestaurantView() {\n        return (\n            <div>\n                <UserRestaurantView\n                    user={this.state.user}\n                    open={this.props.restaurantViewOpen}\n                    close={this.props.closeRestaurantView}\n                    restaurants={this.props.restaurants}\n                    selectedRestaurant={this.props.selectedRestaurant}\n                    menus={this.props.menus}\n                    addItemToCart={this.props.addItemToCart}\n                    closeCart={this.props.closeCart}\n                />\n                <Cart\n                    open={this.props.cartOpen}\n                    close={this.props.closeCart}\n                    cartItems={this.props.cartItems}\n                    removeItemFromCart={this.removeItemFromCart}\n                    checkout={this.props.checkout}\n                ></Cart>\n            </div>\n        );\n    }\n\n    render() {\n        return this.getActiveView();\n    }\n}\n\nexport default UserView;\n","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Fastfood, Restaurant, ShoppingCart } from '@material-ui/icons';\n\n/** Child Views **/\nimport UserView from \"./User/UserView\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      restaurantViewOpen: false,\n      orderViewOpen: false,\n      cartItems: {},\n      restaurants: {},\n      selectedRestaurant: false,\n      menu: {},\n      orders: {}\n    };\n  }\n\n  componentWillMount() {\n    this.getRestaurants();\n    this.getMenus();\n    this.getOrders();\n  }\n\n  mutateState(key, value) {\n    let update = {};\n    update[key] = value;\n    this.setState(update);\n  }\n\n  openCart() {\n    this.setState({\n      cartOpen: true\n    })\n  };\n\n  closeCart() {\n    this.setState({\n      cartOpen: false\n    })\n  }\n\n  openRestaurantView() {\n    this.closeOrderView();\n\n    this.setState({\n      restaurantViewOpen: true\n    });\n  }\n\n  closeRestaurantView() {\n    this.setState({\n      restaurantViewOpen: false\n    });\n  }\n\n  openOrderView() {\n    this.closeRestaurantView();\n\n    this.setState({\n      orderViewOpen: true\n    });\n  }\n\n  closeOrderView() {\n    this.setState({\n      orderViewOpen: false\n    });\n  }\n\n  noViewsOpen() {\n    return !this.state.restaurantViewOpen && !this.state.orderViewOpen;\n  }\n\n  addItemToCart(item) {\n    if(!this.state.selectedRestaurant) {\n      this.setState({\n        selectedRestaurant: item.restaurantId\n      });\n    } else {\n      if(item.restaurantId !== this.state.selectedRestaurant) {\n        return false;\n      }\n    }\n\n    let cart = this.state.cartItems;\n\n    if(cart[item.id]) {\n      cart[item.id].quantity++;\n    } else {\n      cart[item.id] = item;\n      cart[item.id].quantity = 1;\n    }\n\n    this.setState({\n      cart: cart\n    });\n  }\n\n  removeItemFromCart(index) {\n    let cart = this.state.cartItems;\n    delete cart[index];\n    this.setState({\n      cart: cart\n    });\n  }\n\n  clearCart() {\n    this.setState({\n      cartItems: {}\n    });\n  }\n\n  getRestaurants() {\n    fetch(\"https://cs441-api.herokuapp.com/restaurants\").then(res => {\n      return res.json();\n    }).then(json => {\n      let restaurants = {};\n      json.forEach(restaurant => {\n        restaurants[restaurant.id] = restaurant;\n      });\n\n\n      this.setState({\n        restaurants: restaurants\n      });\n      console.log(\"Fetched restaurants from API.\");\n    }).catch(err => {\n      this.setState({\n        error: true,\n        errorDetails: err\n      });\n    });\n  }\n\n  getMenus() {\n    fetch(\"https://cs441-api.herokuapp.com/menus\").then(res => {\n      return res.json();\n    }).then(json => {\n      let menus = {};\n      json.forEach(menu => {\n        menus[menu.id] = menu;\n      });\n\n\n      this.setState({\n        menus: menus\n      });\n\n      console.log(\"Fetched menus from API.\");\n    }).catch(err => {\n      this.setState({\n        error: true,\n        errorDetails: err\n      });\n    });\n  }\n\n  getOrders() {\n    fetch(\"https://cs441-api.herokuapp.com/orders\").then(res => {\n      return res.json();\n    }).then(json => {\n      let orders = {};\n\n      json.forEach(order => {\n        orders[order.id] = order;\n      });\n\n      this.setState({\n        orders: orders\n      });\n\n      console.log(\"Fetched orders from API.\");\n    }).catch(err => {\n      this.setState({\n        error: true,\n        errorDetails: err\n      });\n    });\n  }\n\n  checkout() {\n    this.setState({\n      selectedRestaurant: false\n    });\n\n    this.closeCart();\n\n    fetch('https://cs441-api.herokuapp.com/orders', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: this.createOrderPOSTBody()\n    }).then((res) => {\n      console.log(this.state.cartItems);\n      this.getOrders();\n      this.openOrderView();\n      this.clearCart();\n    });\n  }\n\n  createOrderPOSTBody() {\n    return JSON.stringify({\n      restaurantId: this.state.selectedRestaurant,\n      items: this.state.cartItems\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <MainMenu\n              openRestaurantView={this.openRestaurantView.bind(this)}\n              openOrderView={this.openOrderView.bind(this)}\n              openCart={this.openCart.bind(this)}\n          />\n          <Grid container className=\"AppGrid\">\n            <br />\n            {\n              this.noViewsOpen() ?\n                (\n                  <div className=\"LogoContainer\">\n                    <img className=\"LandingLogo\" src=\"/foodapp_logo_v3.png\" alt=\"Foodapp Logo\" />\n                    <h4>All images courtesy of Wikimedia</h4>\n                  </div>\n                )\n                : \"\"\n            }\n            <UserView\n                restaurants={this.state.restaurants}\n                selectedRestaurant={this.state.selectedRestaurant}\n                menus={this.state.menus}\n                orders={this.state.orders}\n                cartItems={this.state.cartItems}\n                mutateParentState={this.mutateState.bind(this)}\n                restaurantViewOpen={this.state.restaurantViewOpen}\n                orderViewOpen={this.state.orderViewOpen}\n                addItemToCart={this.addItemToCart.bind(this)}\n                closeCart={this.closeCart.bind(this)}\n                removeItemFromCart={this.removeItemFromCart.bind(this)}\n                cartOpen={this.state.cartOpen}\n                checkout={this.checkout.bind(this)}\n            />\n          </Grid>\n      </div>\n    );\n  }\n}\n\nclass MainMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n        <nav className=\"AppNav\">\n          <IconButton\n              onClick={this.props.openRestaurantView.bind(this)}\n          >\n            <Restaurant />\n          </IconButton>\n          <IconButton\n              onClick={this.props.openOrderView.bind(this)}\n          >\n            <Fastfood />\n          </IconButton>\n          <IconButton\n              onClick={this.props.openCart.bind(this)}\n          >\n            <ShoppingCart />\n          </IconButton>\n        </nav>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}