{"version":3,"sources":["Menu/MenuView.js","User/UserRestaurantView.js","User/UserOrderView.js","Order/Cart.js","User/UserView.js","App.js","serviceWorker.js","redux/reducers/menu.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Menu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","react_default","a","createElement","Popover_default","className","anchorOrigin","vertical","horizontal","transformOrigin","open","index_es","onClick","closeMenu","restaurantName","Grid_default","direction","justify","alignItems","spacing","items","map","item","MenuView_MenuItem","key","id","addItemToCart","React","Component","MenuItem","_this3","name","price","toLocaleString","style","currency","Card_default","CardContent_default","CardMedia_default","component","image","getItemInfo","CardActions_default","Button_default","passItemToAppCart","bind","UserRestaurantView","displayMap","selectedRestaurant","displayMenu","activeMenu","userLat","getCookie","userLng","parts","document","cookie","split","length","pop","shift","setState","restaurants","arguments","k","push","srcObj","activeRestaurantName","UserRestaurantView_RestaurantMap","getRestaurants","selectRestaurant","container","Menu_MenuView","RestaurantMap","console","log","restaurant","lib","label","createMarkerLabel","position","lat","lng","markers","forEach","createMarker","src","MapComponent","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","addMarkers","googleMapURL","loadingElement","loadingGraphic","containerElement","mapElement","UserOrderView","orders","order","restaurantId","reverse","getOrders","UserOrderView_PendingOrderSelection","getOrderRestaurant","getOrderItems","UserOrderView_FulfilledOrderSelection","OrderSelection","crypto","createHash","update","toString","digest","substr","orderItems","styles","width","alt","total","calculateTotal","Date","createdAt","count","status","FulfilledOrderSelection","fontSize","itemCountDisplay","PendingOrderSelection","_this4","orderItemsDisplay","date","Cart","cartItems","quantity","removeItemFromCart","IconButton_default","close","getItems","Cart_CartItem","checkout","CartItem","UserView","err","error","user","handleError","restaurantViewOpen","RestaurantView","orderViewOpen","OrderView","src_User_UserOrderView","menus","closeOrderView","src_Order_Cart","cartOpen","closeCart","src_User_UserRestaurantView","closeRestaurantView","getActiveView","App","menu","getMenus","getGeolocation","value","cart","index","fetch","then","res","json","catch","errorDetails","navigator","geolocation","getCurrentPosition","coords","enableHighAccuracy","e","alert","_this5","method","headers","Accept","Content-Type","body","createOrderPOSTBody","openOrderView","clearCart","JSON","stringify","App_MainMenu","openRestaurantView","openCart","noViewsOpen","src_User_UserView","mutateParentState","mutateState","MainMenu","_this6","Boolean","window","location","hostname","match","initialState","menuOpen","menuRestaurant","combineReducers","undefined","type","createStore","rootReducer","ReactDOM","render","es","store","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.40128c9b.chunk.js","sourcesContent":["import React from 'react';\nimport \"./MenuView.css\";\nimport Popover from '@material-ui/core/Popover';\nimport { Close } from '@material-ui/icons';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\n\nclass Menu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <Popover\n                className=\"ActiveMenuPopover\"\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                transformOrigin={{\n                   vertical: 'top',\n                   horizontal: 'left'\n                }}\n                open={this.props.open}\n            >\n                <Close className=\"CloseButton\" onClick={this.props.closeMenu}></Close>\n                <div className=\"MenuHeader\">\n                    <h1>{this.props.restaurantName} Menu</h1>\n                </div>\n                <div className=\"ActiveMenu\">\n                    <Grid\n                        direction=\"row\"\n                        justify=\"flex\"\n                        alignItems=\"flex\"\n                        spacing={16}\n                    >\n                        {(this.props.items.map((item) => {\n                            return (\n                                <MenuItem\n                                    key={item.id}\n                                    item={item}\n                                    addItemToCart={this.props.addItemToCart}\n                                    closeMenu={this.props.closeMenu}\n                                ></MenuItem>\n                            )\n                        }))}\n                    </Grid>\n                </div>\n            </Popover>\n        )\n    }\n}\n\nclass MenuItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    passItemToAppCart() {\n        this.props.addItemToCart(this.props.item);\n        //this.props.closeMenu();\n    }\n\n    getItemInfo() {\n       return (\n           <span className=\"MenuItemInfo\">\n                {this.props.item.name} {this.props.item.price.toLocaleString(\"en-US\", {style: \"currency\", currency: \"USD\"})}\n           </span>\n       );\n    }\n\n    render() {\n        return (\n            <Card\n                className=\"MenuItemCard\"\n            >\n                <CardContent className=\"MenuItemCardContent\">\n                    <CardMedia\n                        className=\"MenuCardMedia\"\n                        component=\"img\"\n                        image={this.props.item.image}\n                    >\n                    </CardMedia>\n                    <br/>\n                    {this.getItemInfo()}\n                    <CardActions>\n                        <Button\n                            className=\"MenuBuyButton\"\n                            onClick={this.passItemToAppCart.bind(this)}\n                        >\n                            Order\n                        </Button>\n                    </CardActions>\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nexport default Menu;","import React from 'react';\nimport './UserRestaurantView.css';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\"\nimport { connect } from \"react-redux\";\n\n/** Other Views **/\nimport Menu from \"../Menu/MenuView\";\n\n/** Globals **/\n\nclass UserRestaurantView extends React.Component {\n    constructor(props) {\n        super(props);\n\n\n        this.state = {\n            displayMap: true,\n            selectedRestaurant: false,\n            displayMenu: false,\n            activeMenu: [],\n            userLat: this.getCookie(\"lat\"),\n            userLng: this.getCookie(\"lng\")\n        };\n    }\n\n    getCookie(name) {\n        var value = \"; \" + document.cookie;\n        var parts = value.split(\"; \" + name + \"=\");\n\n        if(parts.length == 2) {\n            return parts.pop().split(\";\").shift();\n        }\n    };\n\n    componentWillReceiveProps() {\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    openMenu() {\n        this.setState({\n            activeMenu: this.props.restaurants[arguments[0] - 1].items\n        });\n    }\n\n    closeMenu() {\n        this.setState({\n            displayMenu: false,\n            displayMap: true\n        });\n    }\n\n    getRestaurants() {\n        let restaurants = [];\n\n        for(var k in this.props.restaurants) {\n            restaurants.push(this.props.restaurants[k]);\n        }\n\n        return restaurants;\n    }\n\n    selectRestaurant(id) {\n        let srcObj = (id ? this.props.restaurants[id] : this.props.restaurants[arguments[0] -1])\n        this.setState({\n            displayMenu: true,\n            displayMap: false,\n            activeMenu: srcObj.items,\n            activeRestaurantName: srcObj.name\n        });\n    }\n\n    render() {\n        return (\n                <div\n                    className=\"UserRestaurantViewContainer\"\n                >\n                    <h1>Restaurants Near You</h1>\n                    {\n                        this.state.displayMap ?\n                            <RestaurantMap\n                                restaurants={this.getRestaurants()}\n                                userLat={this.state.userLat}\n                                userLng={this.state.userLng}\n                                selectRestaurant={this.selectRestaurant.bind(this)}\n                            />\n                            :\n                            \"\"\n                    }\n                    <Grid\n                        className=\"UserRestaurantViewGrid\"\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        spacing={40}\n                    >\n                        {\n                            //this.getRestaurants().map((restaurant) => {\n                            //    if(this.props.selectedRestaurant && restaurant.id !== this.props.selectedRestaurant) {\n                            //         return null;\n                            //    } else {\n                            //        return (\n                            //            <RestaurantSelection\n                            //                key={restaurant.id}\n                            //                restaurant={restaurant}\n                            //                openParentMenu={this.openMenu.bind(this, restaurant.id+1)}\n                            //            ></RestaurantSelection>\n                            //        );\n                            //    }\n                            //})\n                        }\n                        <Menu\n                            open={this.state.displayMenu}\n                            items={this.state.activeMenu}\n                            restaurantName={this.state.activeRestaurantName}\n                            closeMenu={this.closeMenu.bind(this)}\n                            addItemToCart={this.props.addItemToCart}\n                        ></Menu>\n                    </Grid>\n                </div>\n        );\n    }\n}\n\nclass RestaurantMap extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    selectRestaurant() {\n        console.log(\"subselecting restaurant \"+arguments[0]);\n        this.props.selectRestaurant(arguments[0]);\n    }\n\n    createMarkerLabel(restaurant) {\n        //return (<Tooltip placement=\"top\" open={true}>{restaurant.name}</Tooltip>);\n        return (restaurant.name);\n    }\n\n    createMarker(restaurant) {\n        return (\n            <Marker\n                key={restaurant.id}\n                label={this.createMarkerLabel(restaurant)}\n                position={{ lat: restaurant.lat, lng: restaurant.lng }}\n                onClick={this.selectRestaurant.bind(this, restaurant.id)}\n            />\n        );\n    }\n\n    addMarkers() {\n        let markers = [];\n\n        this.props.restaurants.forEach((restaurant) => {\n            markers.push(this.createMarker(restaurant));\n        });\n\n        return markers;\n    }\n\n    loadingGraphic() {\n        return (\n            <div className=\"RestaurantMapLoader\">\n                <img src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/04de2e31234507.564a1d23645bf.gif\" />\n            </div>\n        )\n    }\n\n    render() {\n       const MapComponent = withScriptjs(withGoogleMap((props) =>\n            <GoogleMap\n                defaultZoom={13}\n                defaultCenter={{ lat: this.props.userLat, lng: this.props.userLng }}\n            >\n                {this.addMarkers()}\n             </GoogleMap>\n        ));\n\n        return (\n            <MapComponent\n                className=\"RestaurantMap\"\n                googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyD44S3kM5pY8Tae-uz5c6YCd-F7gABvSi0\"\n                loadingElement={this.loadingGraphic()}\n                containerElement={<div className=\"RestaurantMapContainerElement\" />}\n                mapElement={<div className=\"RestaurantMapElement\"/>}\n            />\n        )\n    }\n\n}\n\nclass RestaurantSelection extends React.Component {\n    constructor(props) {\n        super();\n\n        this.props = props;\n        this.state = {};\n    }\n\n    onClick() {\n        this.props.openParentMenu();\n    }\n\n    render() {\n        return (\n            <Card\n                className=\"RestaurantCard\"\n                onClick={this.onClick.bind(this)}\n            >\n                <CardContent className=\"RestaurantCardContent\">\n                    {this.props.restaurant.name}\n                    <br/>\n                    <br/>\n                    <CardMedia\n                        className=\"RestaurantCardMedia\"\n                        component=\"img\"\n                        image={this.props.restaurant.image}\n                    />\n                    <br/>\n                    {this.props.restaurant.description}\n                </CardContent>\n            </Card>\n        )\n    }\n}\n\nexport default UserRestaurantView;\n","import React from 'react';\nimport './UserOrderView.css';\nimport crypto from \"crypto\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\n//import CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\n//import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport { Cached, CheckCircleOutline } from '@material-ui/icons';\n\n/** Other Views **/\n\nclass UserOrderView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        console.log(\"orders:\");\n        console.log(props.orders);\n    }\n\n    componentDidMount() {\n\n    }\n\n    getOrderRestaurant(order) {\n        if(this.props.restaurants[order.restaurantId]) {\n            return this.props.restaurants[order.restaurantId]\n        } else {\n            return {};\n        }\n    }\n\n    getOrderItems(order) {\n//        let restaurant = this.getOrderRestaurant(order);\n        return [];\n    }\n\n    getOrders() {\n        let orders = [];\n\n        for(var k in this.props.orders) {\n            orders.push(this.props.orders[k]);\n        }\n\n        orders.reverse();\n        return orders;\n    }\n\n    render() {\n        return (\n            <div\n                className=\"UserOrderViewContainer\"\n            >\n                <h1>Your Orders</h1>\n                <Grid\n                    className=\"UserOrderViewGrid\"\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    spacing={40}\n                >\n                    {\n                        this.getOrders().map((order) => {\n                            if (order.state === \"pending\") {\n                                return (\n                                    <PendingOrderSelection\n                                        key={order.id}\n                                        order={order}\n                                        restaurant={this.getOrderRestaurant(order)}\n                                        items={this.getOrderItems(order)}\n                                    ></PendingOrderSelection>\n                                );\n                            } else {\n                                return (\n                                    <FulfilledOrderSelection\n                                        key={order.id}\n                                        order={order}\n                                        restaurant={this.getOrderRestaurant(order)}\n                                        items={this.getOrderItems(order)}\n                                    ></FulfilledOrderSelection>\n                                );\n                            }\n                        })\n                    }\n                </Grid>\n            </div>\n        );\n    }\n}\n\nclass OrderSelection extends React.Component {\n    openItemSummary(order) {\n\n    }\n\n    /**\n     * hashOrderId\n     * @param id\n     * @returns {string}\n     */\n    hashOrderId(id) {\n        return crypto.createHash('md5').update(id.toString()).digest('hex').substr(0, 8);\n    }\n\n    /**\n     * orderItemsDisplay\n     * @param orderItems\n     * @returns {XML}\n     */\n    orderItemsDisplay(orderItems) {\n        console.log(\"items:\");\n        console.log(orderItems);\n        return (\n            <Grid>\n                {\n                    orderItems.forEach((item) => {\n                        if(item.item) {\n                            return (\n                                <Card styles={{width: \"10%\"}}>\n                                    <CardMedia>\n                                        <img src={item.item.image} alt={item.item.name}/>\n                                    </CardMedia>\n                                    <CardContent>\n                                        {item.item.name}\n                                    </CardContent>\n                                </Card>\n                            )\n                        }\n                    })\n                }\n            </Grid>\n        )\n    }\n\n    /**\n     * calculateTotal\n     * @returns {string|*}\n     */\n    calculateTotal() {\n        let total = 0;\n\n        this.props.order.orderItems.forEach((item) => {\n            if(item.item) {\n                total += item.item.price;\n            }\n        });\n\n        return total.toLocaleString(\"en-US\", {style: \"currency\", currency: \"USD\"});\n    }\n\n    /**\n     * total\n     * @returns {XML}\n     */\n    total() {\n        return (\n            <span>{this.calculateTotal()}</span>\n        );\n    }\n\n    /**\n     * date\n     * @returns {XML}\n     */\n    date() {\n        return (<span>{new Date(this.props.order.createdAt).toLocaleString()}</span>);\n    }\n\n    /**\n     * itemCountDisplay\n     * @returns {*}\n     */\n    itemCountDisplay() {\n        if(this.props.order.orderItems) {\n            let count = this.props.order.orderItems.length;\n            if(count > 1) {\n                return count+\" Items\";\n            } else {\n                return count+\" Item\";\n            }\n        } else {\n            return '';\n        }\n    }\n\n    /**\n     * status\n     * @returns {XML}\n     */\n    status() {\n        return (\n            <Button className=\"StatusButton\">\n                {this.props.order.status}\n            </Button>\n        );\n    }\n}\n\nclass FulfilledOrderSelection extends OrderSelection {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        console.log(this.props);\n        return (\n            <Card\n                className=\"FulfilledOrderCard\"\n            >\n                <CardContent className=\"OrderCardContent\">\n                    <CheckCircleOutline fontSize=\"large\" className=\"LeftIcon\" />\n                    <br/>\n                    <span className=\"OrderCardHeader\">\n                        {this.total()}\n                        <br/>\n                        from {this.props.restaurant.name}\n                        <br/>\n                        {this.itemCountDisplay()}\n                    </span>\n                </CardContent>\n                <CardActions></CardActions>\n            </Card>\n        )\n    }\n}\n\nclass PendingOrderSelection extends OrderSelection {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <Card\n                className=\"PendingOrderCard\"\n            >\n                <CardContent className=\"OrderCardContent\">\n                    <Cached fontSize=\"large\" className=\"LeftIcon\" />\n                    <br/>\n                    <span className=\"OrderCardHeader\">\n                        {this.total()}\n                        <br/>\n                        from {this.props.restaurant.name}\n                    </span>\n                    <br />\n                    {this.orderItemsDisplay(this.props.order.orderItems)}\n                    <span className=\"OrderCardData\">\n                        at {this.date()}\n                    </span>\n                </CardContent>\n                <CardActions></CardActions>\n            </Card>\n        )\n    }\n}\n\nexport default UserOrderView;\n","import React from 'react';\nimport \"./Cart.css\";\nimport Popover from '@material-ui/core/Popover';\nimport { Close } from '@material-ui/icons';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\n//import CardActionArea from '@material-ui/core/CardActionArea';\n//import CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\n\nclass Cart extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    calculateTotal() {\n        let total = 0;\n\n        for(var k in this.props.cartItems) {\n            total += this.props.cartItems[k].price*this.props.cartItems[k].quantity;\n        }\n\n        return total.toLocaleString(\"en-US\", {style: \"currency\", currency: \"USD\"});\n    }\n\n    removeItem(id) {\n        this.props.removeItemFromCart(id);\n    }\n\n    getItems() {\n        let items = [];\n\n        for(var k in this.props.cartItems) {\n            items.push(this.props.cartItems[k]);\n        }\n\n        return items;\n    }\n\n    render() {\n        return (\n            <Popover\n                className=\"Cart\"\n                open={this.props.open}\n            >\n                <IconButton\n                    onClick={this.props.close}\n                >\n                    <Close />\n                </IconButton>\n                Ready to place your order?\n                <div className=\"CartContent\">\n                    <Grid\n                        container\n                        className=\"CartGrid\"\n                        direction=\"column\"\n                        justify=\"left\"\n                        alignItems=\"left\"\n                        spacing={16}\n                    >\n                        {\n                            this.getItems().map((item) => {\n                                return (<CartItem key={item.id} item={item}></CartItem>);\n                            })\n                        }\n                    </Grid>\n                    <div className=\"CartActions\">\n                        <b>Total:</b> {this.calculateTotal()}\n                        <br />\n                        <Button\n                            className=\"CheckoutButton\"\n                            onClick={this.props.checkout}\n                            styles={{}}\n                        >\n                            Checkout\n                        </Button>\n                    </div>\n                </div>\n            </Popover>\n        );\n    }\n}\n\nclass CartItem extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Card\n                className=\"CartItem\"\n            >\n                <CardContent>\n                    <CardMedia\n                        className=\"CartItemCardMedia\"\n                        component=\"img\"\n                        image={this.props.item.image}\n                    ></CardMedia>\n                    {this.props.item.quantity} {this.props.item.name}<br />\n                    ${this.props.item.price * this.props.item.quantity}\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nexport default Cart;","import React from 'react';\nimport './UserView.css';\nimport UserRestaurantView from \"./UserRestaurantView\";\nimport UserOrderView from \"./UserOrderView\";\nimport Cart from \"../Order/Cart\";\n\nclass UserView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleError(err) {\n        this.setState({\n            error: true\n        });\n    }\n\n    processUser(user) {\n        if(!user.error) {\n            this.setState({\n                user: user\n            });\n        } else {\n            this.handleError(user.error);\n        }\n    }\n\n    getActiveView() {\n        if(this.props.restaurantViewOpen) {\n            return this.RestaurantView()\n        } else if(this.props.orderViewOpen) {\n            return this.OrderView()\n        } else {\n            return null;\n        }\n    }\n\n    OrderView() {\n        return (\n            <div>\n                <UserOrderView\n                    user={this.state.user}\n                    orders={this.props.orders}\n                    restaurants={this.props.restaurants}\n                    menus={this.props.menus}\n                    open={this.props.orderViewOpen}\n                    close={this.props.closeOrderView}\n                />\n                <Cart\n                    open={this.state.cartOpen}\n                    close={this.closeCart}\n                    cartItems={this.props.cartItems}\n                    removeItemFromCart={this.removeItemFromCart}\n                ></Cart>\n            </div>\n        );\n    }\n\n    RestaurantView() {\n        return (\n            <div>\n                <UserRestaurantView\n                    user={this.state.user}\n                    open={this.props.restaurantViewOpen}\n                    close={this.props.closeRestaurantView}\n                    restaurants={this.props.restaurants}\n                    selectedRestaurant={this.props.selectedRestaurant}\n                    menus={this.props.menus}\n                    addItemToCart={this.props.addItemToCart}\n                    closeCart={this.props.closeCart}\n                />\n                <Cart\n                    open={this.props.cartOpen}\n                    close={this.props.closeCart}\n                    cartItems={this.props.cartItems}\n                    removeItemFromCart={this.removeItemFromCart}\n                    checkout={this.props.checkout}\n                ></Cart>\n            </div>\n        );\n    }\n\n    render() {\n        return this.getActiveView();\n    }\n}\n\nexport default UserView;\n","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Fastfood, Restaurant, ShoppingCart } from '@material-ui/icons';\n\n/** Child Views **/\nimport UserView from \"./User/UserView\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      restaurantViewOpen: false,\n      orderViewOpen: false,\n      cartItems: {},\n      restaurants: {},\n      selectedRestaurant: false,\n      menu: {},\n      orders: {}\n    };\n  }\n\n  componentWillMount() {\n    this.getRestaurants();\n    this.getMenus();\n    this.getOrders();\n    this.getGeolocation();\n  }\n\n  mutateState(key, value) {\n    let update = {};\n    update[key] = value;\n    this.setState(update);\n  }\n\n  openCart() {\n    this.setState({\n      cartOpen: true\n    })\n  };\n\n  closeCart() {\n    this.setState({\n      cartOpen: false\n    })\n  }\n\n  openRestaurantView() {\n    this.closeOrderView();\n\n    this.setState({\n      restaurantViewOpen: true\n    });\n  }\n\n  closeRestaurantView() {\n    this.setState({\n      restaurantViewOpen: false\n    });\n  }\n\n  openOrderView() {\n    this.closeRestaurantView();\n\n    this.setState({\n      orderViewOpen: true\n    });\n  }\n\n  closeOrderView() {\n    this.setState({\n      orderViewOpen: false\n    });\n  }\n\n  noViewsOpen() {\n    return !this.state.restaurantViewOpen && !this.state.orderViewOpen;\n  }\n\n  addItemToCart(item) {\n    if(!this.state.selectedRestaurant) {\n      this.setState({\n        selectedRestaurant: item.restaurantId\n      });\n    } else {\n      if(item.restaurantId !== this.state.selectedRestaurant) {\n        return false;\n      }\n    }\n\n    let cart = this.state.cartItems;\n\n    if(cart[item.id]) {\n      cart[item.id].quantity++;\n    } else {\n      cart[item.id] = item;\n      cart[item.id].quantity = 1;\n    }\n\n    this.setState({\n      cart: cart\n    });\n  }\n\n  removeItemFromCart(index) {\n    let cart = this.state.cartItems;\n    delete cart[index];\n    this.setState({\n      cart: cart\n    });\n  }\n\n  clearCart() {\n    this.setState({\n      cartItems: {}\n    });\n  }\n\n  getRestaurants() {\n    fetch(\"https://cs441-api.herokuapp.com/restaurants\").then(res => {\n      return res.json();\n    }).then(json => {\n      let restaurants = {};\n      json.forEach(restaurant => {\n        restaurants[restaurant.id] = restaurant;\n      });\n\n\n      this.setState({\n        restaurants: restaurants\n      });\n      console.log(\"Fetched restaurants from API.\");\n    }).catch(err => {\n      this.setState({\n        error: true,\n        errorDetails: err\n      });\n    });\n  }\n\n  getMenus() {\n    fetch(\"https://cs441-api.herokuapp.com/menus\").then(res => {\n      return res.json();\n    }).then(json => {\n      let menus = {};\n      json.forEach(menu => {\n        menus[menu.id] = menu;\n      });\n\n\n      this.setState({\n        menus: menus\n      });\n\n      console.log(\"Fetched menus from API.\");\n    }).catch(err => {\n      this.setState({\n        error: true,\n        errorDetails: err\n      });\n    });\n  }\n\n  getOrders() {\n    fetch(\"https://cs441-api.herokuapp.com/orders\").then(res => {\n      return res.json();\n    }).then(json => {\n      let orders = {};\n\n      json.forEach(order => {\n        orders[order.id] = order;\n      });\n\n      this.setState({\n        orders: orders\n      });\n\n      console.log(\"Fetched orders from API.\");\n    }).catch(err => {\n      this.setState({\n        error: true,\n        errorDetails: err\n      });\n    });\n  }\n\n  getGeolocation() {\n    if(navigator.geolocation) {\n      try {\n        navigator.geolocation.getCurrentPosition(function(position) {\n          console.log(\"got geolocation!\");\n          console.log(position);\n          document.cookie = \"lat=\"+position.coords.lat+\";lng=\"+position.coords.lng;\n        }, function(error) {\n          console.log(error);\n        }, {\n          enableHighAccuracy: true\n        });\n      } catch(e) {\n        console.log(e);\n      }\n    } else {\n      alert(\"Geolocation is not supported by this browser!\")\n    }\n  }\n\n  checkout() {\n    this.setState({\n      selectedRestaurant: false\n    });\n\n    this.closeCart();\n\n    fetch('https://cs441-api.herokuapp.com/orders', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: this.createOrderPOSTBody()\n    }).then((res) => {\n      console.log(this.state.cartItems);\n      this.getOrders();\n      this.openOrderView();\n      this.clearCart();\n    });\n  }\n\n  createOrderPOSTBody() {\n    return JSON.stringify({\n      restaurantId: this.state.selectedRestaurant,\n      items: this.state.cartItems\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <MainMenu\n              openRestaurantView={this.openRestaurantView.bind(this)}\n              openOrderView={this.openOrderView.bind(this)}\n              openCart={this.openCart.bind(this)}\n          />\n          <Grid container className=\"AppGrid\">\n            <br />\n            {\n              this.noViewsOpen() ?\n                (\n                  <div className=\"LogoContainer\">\n                    <img className=\"LandingLogo\" src=\"/foodapp_logo_v3.png\" alt=\"Foodapp Logo\" />\n                    <h4>All images courtesy of Wikimedia</h4>\n                  </div>\n                )\n                : \"\"\n            }\n            <UserView\n                restaurants={this.state.restaurants}\n                selectedRestaurant={this.state.selectedRestaurant}\n                menus={this.state.menus}\n                orders={this.state.orders}\n                cartItems={this.state.cartItems}\n                mutateParentState={this.mutateState.bind(this)}\n                restaurantViewOpen={this.state.restaurantViewOpen}\n                orderViewOpen={this.state.orderViewOpen}\n                addItemToCart={this.addItemToCart.bind(this)}\n                closeCart={this.closeCart.bind(this)}\n                removeItemFromCart={this.removeItemFromCart.bind(this)}\n                cartOpen={this.state.cartOpen}\n                checkout={this.checkout.bind(this)}\n            />\n          </Grid>\n      </div>\n    );\n  }\n}\n\nclass MainMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n        <nav className=\"AppNav\">\n          <IconButton\n              onClick={this.props.openRestaurantView.bind(this)}\n          >\n            <Restaurant />\n          </IconButton>\n          <IconButton\n              onClick={this.props.openOrderView.bind(this)}\n          >\n            <Fastfood />\n          </IconButton>\n          <IconButton\n              onClick={this.props.openCart.bind(this)}\n          >\n            <ShoppingCart />\n          </IconButton>\n        </nav>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    menuOpen: false,\n    menuRestaurant: {}\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case \"OPEN_MENU\": {\n            state.menuOpen = true;\n            return state;\n        }\n        case \"CLOSE_MENU\": {\n            state.menuOpen = false;\n            return state;\n        }\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport menu from \"./menu\";\n\nexport default combineReducers({ menu });\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}