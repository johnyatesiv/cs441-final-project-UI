{"version":3,"sources":["Menu/MenuView.js","User/UserRestaurantView.js","User/UserOrderView.js","User/UserView.js","Order/Cart.js","App.js","serviceWorker.js","index.js"],"names":["Menu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","Popover_default","className","anchorOrigin","vertical","horizontal","transformOrigin","open","index_es","onClick","close","Grid_default","container","direction","justify","alignItems","spacing","menu","map","item","MenuView_MenuItem","key","id","React","Component","MenuItem","_this2","Card_default","bind","CardContent_default","name","price","CardActions_default","Button_default","UserRestaurantView","displayMenu","activeMenu","setState","menus","arguments","restaurants","restaurant","UserRestaurantView_RestaurantSelection","openParentMenu","openMenu","Menu_MenuView","closeMenu","RestaurantSelection","_this3","CardMedia_default","component","image","description","UserOrderView","console","log","orders","order","restaurantId","getOrderRestaurant","UserOrderView_OrderSelection","items","getOrderItems","OrderSelection","crypto","createHash","update","toString","digest","substr","openItemSummary","hashOrderId","total","UserView","err","error","user","handleError","restaurantViewOpen","RestaurantView","orderViewOpen","OrderView","src_User_UserOrderView","closeOrderView","src_User_UserRestaurantView","closeRestaurantView","getActiveView","Cart","quantity","removeItemFromCart","IconButton_default","Cart_CartItem","calculateTotal","CartItem","App","cart","getRestaurants","getMenus","getOrders","value","cartOpen","index","fetch","then","res","json","catch","errorDetails","_this4","App_MainMenu","openRestaurantView","openOrderView","openCart","noViewsOpen","style","width","height","textAlign","marginLeft","src","alt","src_User_UserView","mutateParentState","mutateState","addItemToCart","src_Order_Cart","closeCart","MainMenu","_this5","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9deae43e.chunk.js","sourcesContent":["import React from 'react';\nimport \"./MenuView.css\";\nimport Popover from '@material-ui/core/Popover';\nimport { Fastfood, Close } from '@material-ui/icons';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\n\nclass Menu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <Popover\n                className=\"ActiveMenuPopover\"\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                transformOrigin={{\n                   vertical: 'top',\n                   horizontal: 'left'\n                }}\n                open={this.props.open}\n            >\n                <Close className=\"CloseButton\" onClick={this.props.close}></Close>\n                <br />\n                <div className=\"ActiveMenu\">\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"left\"\n                        alignItems=\"left\"\n                        spacing={16}\n                    >\n                        <h1>Menu</h1><br />\n                        {(this.props.menu.map((item) => {\n                            return <MenuItem key={item.id} item={item}></MenuItem>\n                        }))}\n                    </Grid>\n                </div>\n            </Popover>\n        )\n    }\n}\n\nclass MenuItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    onClick() {\n\n    }\n\n    render() {\n        return (\n            <Card\n                className=\"MenuItemCard\"\n                onClick={this.onClick.bind(this)}\n            >\n                <CardContent className=\"MenuItemCardContent\">\n                    <Fastfood />\n                    <br/>\n                    {this.props.item.name}\n                    <br/>\n                    ${this.props.item.price}\n                    <CardActions>\n                        <Button>Order</Button>\n                    </CardActions>\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nexport default Menu;","import React from 'react';\nimport './UserRestaurantView.css';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\n\n/** Other Views **/\nimport Menu from \"../Menu/MenuView\";\n\n/** Globals **/\n\nclass UserRestaurantView extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            displayMenu: false,\n            activeMenu: [],\n        };\n    }\n\n    componentDidMount() {\n\n    }\n\n    openMenu() {\n        this.setState({\n            displayMenu: true,\n            activeMenu: this.state.menus[arguments[0]]\n        });\n    }\n\n    closeMenu() {\n        this.setState({\n            displayMenu: false\n        });\n    }\n\n    render() {\n        return (\n                <div\n                    className=\"UserRestaurantViewContainer\"\n                >\n                    <h1>Restaurants near you</h1>\n                    <Grid\n                        className=\"UserRestaurantViewGrid\"\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        spacing={40}\n                    >\n                        {\n                            this.props.restaurants.map(restaurant => {\n                                return (\n                                    <RestaurantSelection\n                                        key={restaurant.id}\n                                        restaurant={restaurant}\n                                        openParentMenu={this.openMenu.bind(this, restaurant.id)}\n                                    ></RestaurantSelection>\n                                );\n                            })\n                        }\n                        <Menu\n                            open={this.state.displayMenu}\n                            menu={this.state.activeMenu}\n                            close={this.closeMenu.bind(this)}\n                        ></Menu>\n                    </Grid>\n                </div>\n        );\n    }\n}\n\nclass RestaurantSelection extends React.Component {\n    constructor(props) {\n        super();\n\n        this.props = props;\n        this.state = {};\n    }\n\n    onClick() {\n        this.props.openParentMenu();\n    }\n\n    render() {\n        return (\n            <Card\n                className=\"RestaurantCard\"\n                onClick={this.onClick.bind(this)}\n            >\n                <CardContent className=\"RestaurantCardContent\">\n                    {this.props.restaurant.name}\n                    <br/>\n                    <CardMedia\n                        className=\"RestaurantCardMedia\"\n                        component=\"img\"\n                        image={this.props.restaurant.image}\n                    />\n                    <br/>\n                    {this.props.restaurant.description}\n                </CardContent>\n                <CardActions></CardActions>\n            </Card>\n        )\n    }\n}\n\nexport default UserRestaurantView;\n","import React from 'react';\nimport './UserOrderView.css';\nimport crypto from \"crypto\";\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\n//import CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\n//import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\n\n/** Other Views **/\n\nclass UserOrderView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        console.log(\"orders:\");\n        console.log(props.orders);\n    }\n\n    componentDidMount() {\n\n    }\n\n    getOrderRestaurant(order) {\n        return this.props.restaurants[order.restaurantId]\n    }\n\n    getOrderItems(order) {\n        let restaurant = this.getOrderRestaurant(order);\n        return [];\n    }\n\n    render() {\n        return (\n            <div\n                className=\"UserOrderViewContainer\"\n            >\n                <h1>Your Orders</h1>\n                <Grid\n                    className=\"UserOrderViewGrid\"\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"left\"\n                    spacing={40}\n                >\n                    {\n                        this.props.orders.map(order => {\n                            return (\n                                <OrderSelection\n                                    key={order.id}\n                                    order={order}\n                                    restaurant={this.getOrderRestaurant(order)}\n                                    items={this.getOrderItems(order)}\n                                ></OrderSelection>\n                            );\n                        })\n                    }\n                </Grid>\n            </div>\n        );\n    }\n}\n\nclass OrderSelection extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    openItemSummary(order) {\n\n    }\n\n    hashOrderId(id) {\n        return crypto.createHash('md5').update(id.toString()).digest('hex').substr(0, 8);\n    }\n\n    render() {\n        return (\n            <Card\n                className=\"OrderCard\"\n                onClick={this.openItemSummary(this.props.order)}\n            >\n                <CardContent className=\"OrderCardContent\">\n                    Order {this.hashOrderId(this.props.order.id)}\n                    <br/>\n                    <CardMedia\n                        className=\"OrderCardMedia\"\n                        component=\"img\"\n                    />\n                    <br/>\n                    From {this.props.restaurant.name}\n                    {this.props.order.total}<br />\n                    {this.props.order.state}\n                </CardContent>\n                <CardActions></CardActions>\n            </Card>\n        )\n    }\n}\n\nexport default UserOrderView;\n","import React from 'react';\nimport './UserView.css';\n//import GridList from '@material-ui/core/GridList';\nimport UserRestaurantView from \"./UserRestaurantView\";\nimport UserOrderView from \"./UserOrderView\";\n\nclass UserView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleError(err) {\n        this.setState({\n            error: true\n        });\n    }\n\n    processUser(user) {\n        if(!user.error) {\n            this.setState({\n                user: user\n            });\n        } else {\n            this.handleError(user.error);\n        }\n    }\n\n    getActiveView() {\n        if(this.props.restaurantViewOpen) {\n            return this.RestaurantView()\n        } else if(this.props.orderViewOpen) {\n            return this.OrderView()\n        } else {\n            return null;\n        }\n    }\n\n    OrderView() {\n        return (\n            <UserOrderView\n                user={this.state.user}\n                orders={this.props.orders}\n                restaurants={this.props.restaurants}\n                menus={this.props.menus}\n                open={this.props.orderViewOpen}\n                close={this.props.closeOrderView}\n            />\n        );\n    }\n\n    RestaurantView() {\n        return (\n            <UserRestaurantView\n                user={this.state.user}\n                open={this.props.restaurantViewOpen}\n                close={this.props.closeRestaurantView}\n                restaurants={this.props.restaurants}\n                menus={this.props.menus}\n            />\n        );\n    }\n\n    render() {\n        return this.getActiveView();\n    }\n}\n\nexport default UserView;\n","import React from 'react';\nimport \"./Cart.css\";\nimport Popover from '@material-ui/core/Popover';\nimport { Fastfood, Close } from '@material-ui/icons';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\n//import CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\n//import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\n\nclass Cart extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    calculateTotal() {\n        let total = 0;\n\n        for(var item in this.props.items) {\n            total += item.price*item.quantity;\n        }\n\n        return total;\n    }\n\n    removeItem(id) {\n        this.props.removeItemFromCart(id);\n    }\n\n    render() {\n        return (\n            <Popover\n                className=\"Cart\"\n                open={this.props.open}\n            >\n                <IconButton\n                    onClick={this.props.close}\n                >\n                    <Close />\n                </IconButton>\n                <div className=\"CartContent\">\n                    <Grid\n                        className=\"CartGrid\"\n                        container\n                        direction=\"column\"\n                        justify=\"left\"\n                        alignItems=\"left\"\n                        spacing={16}\n                    >\n                        {\n                            this.props.items.map((item) => {\n                                return (<CartItem key={item.id} item={item}></CartItem>);\n                            })\n                        }\n                        <br />\n                        <b>Total:</b> ${this.calculateTotal()}\n                    </Grid>\n                </div>\n            </Popover>\n        );\n    }\n}\n\nclass CartItem extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Card\n                className=\"CartItem\"\n            >\n                {this.props.item.name}  x {this.props.item.quantity}<br />\n                ${this.props.item.price * this.props.item.quantity}\n\n            </Card>\n        );\n    }\n}\n\nexport default Cart;","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Fastfood, Restaurant, ShoppingCart } from '@material-ui/icons';\n\n/** Child Views **/\nimport UserView from \"./User/UserView\";\nimport Cart from \"./Order/Cart\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      restaurantViewOpen: false,\n      orderViewOpen: false,\n      cart: [],\n      restaurants: [],\n      menu: [],\n      orders: []\n    };\n  }\n\n  componentWillMount() {\n    this.getRestaurants();\n    this.getMenus();\n    this.getOrders();\n  }\n\n  mutateState(key, value) {\n    let update = {};\n    update[key] = value;\n    this.setState(update);\n  }\n\n  openCart() {\n    this.setState({\n      cartOpen: true\n    })\n  };\n\n  closeCart() {\n    this.setState({\n      cartOpen: false\n    })\n  }\n\n  openRestaurantView() {\n    this.closeOrderView();\n\n    this.setState({\n      restaurantViewOpen: true\n    });\n  }\n\n  closeRestaurantView() {\n    this.setState({\n      restaurantViewOpen: false\n    });\n  }\n\n  openOrderView() {\n    this.closeRestaurantView();\n\n    this.setState({\n      orderViewOpen: true\n    });\n  }\n\n  closeOrderView() {\n    this.setState({\n      orderViewOpen: false\n    });\n  }\n\n  noViewsOpen() {\n    return !this.state.restaurantViewOpen && !this.state.orderViewOpen;\n  }\n\n  addItemToCart(item) {\n    let cart = this.state.cart;\n\n    if(cart[item.id]) {\n      cart[item.id].quantity++;\n    } else {\n      cart[item.id] = item;\n      cart[item.id].quantity = 1;\n    }\n\n    this.setState({\n      cart: cart\n    });\n  }\n\n  removeItemFromCart(index) {\n    let cart = this.state.cart;\n    delete cart[index];\n    this.setState({\n      cart: cart\n    });\n  }\n\n  getRestaurants() {\n    fetch(\"https://cs441-api.herokuapp.com/restaurants\").then(res => {\n      return res.json();\n    }).then(json => {\n      console.log(\"Fetched restaurants from API.\");\n      this.setState({\n        restaurants: json\n      });\n\n      console.log(\"Got restaurants:\");\n      console.log(this.state.restaurants);\n    }).catch(err => {\n      this.setState({\n        error: true,\n        errorDetails: err\n      });\n    });\n  }\n\n  getMenus() {\n    fetch(\"https://cs441-api.herokuapp.com/menus\").then(res => {\n      return res.json();\n    }).then(json => {\n      console.log(\"Fetched menus from API.\");\n      this.setState({\n        menus: json\n      });\n    }).catch(err => {\n      this.setState({\n        error: true,\n        errorDetails: err\n      });\n    });\n  }\n\n  getOrders() {\n    fetch(\"https://cs441-api.herokuapp.com/orders\").then(res => {\n      return res.json();\n    }).then(json => {\n      console.log(\"Fetched orders from API.\");\n      this.setState({\n        orders: json\n      });\n    }).catch(err => {\n      this.setState({\n        error: true,\n        errorDetails: err\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <MainMenu\n              openRestaurantView={this.openRestaurantView.bind(this)}\n              openOrderView={this.openOrderView.bind(this)}\n              openCart={this.openCart.bind(this)}\n          />\n          <Grid container className=\"AppGrid\">\n            <br />\n            {\n              this.noViewsOpen() ?\n                (\n                  <div style={{width: \"100vw\", height: \"100vh\", textAlign: \"center\"}}>\n                    <img style={{width: \"50vw\", height: \"50vh\", marginLeft: \"10vw\"}} src=\"/foodapp_logo.png\" alt=\"Foodapp Logo\" />\n                  </div>\n                )\n                : \"\"\n            }\n            <UserView\n                restaurants={this.state.restaurants}\n                menus={this.state.menus}\n                orders={this.state.orders}\n                mutateParentState={this.mutateState.bind(this)}\n                restaurantViewOpen={this.state.restaurantViewOpen}\n                orderViewOpen={this.state.orderViewOpen}\n                addItemToCart={this.addItemToCart.bind(this)}\n                removeItemFromCart={this.removeItemFromCart.bind(this)}\n            />\n          </Grid>\n          <Cart\n              open={this.state.cartOpen}\n              close={this.closeCart.bind(this)}\n              items={this.state.cart}\n              removeItemFromCart={this.removeItemFromCart.bind(this)}\n          ></Cart>\n      </div>\n    );\n  }\n}\n\nclass MainMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n        <nav className=\"AppNav\">\n          <IconButton\n              onClick={this.props.openRestaurantView.bind(this)}\n          >\n            <Restaurant />\n          </IconButton>\n          <IconButton\n              onClick={this.props.openOrderView.bind(this)}\n          >\n            <Fastfood />\n          </IconButton>\n          <IconButton\n              onClick={this.props.openCart.bind(this)}\n          >\n            <ShoppingCart />\n          </IconButton>\n        </nav>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}